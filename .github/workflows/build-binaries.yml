name: Build Cross-Platform Binaries

on:
  # The build is integrated into the release.yml workflow now
  #    but we'll leave the manual trigger for testing for now
  # push:
  #   tags: ["v*"]
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build All Platforms
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Handles the installation and caching of Bun via a verified action
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest       # or pin to a specific version like "1.2.0"

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Build all platform binaries
        run: bun scripts/build.ts

      - name: Update Draft Release with Binaries
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Find the draft release for this tag
          RELEASE_ID=$(gh api repos/${{ github.repository }}/releases \
            --jq ".[] | select(.tag_name==\"${{ github.ref_name }}\" and .draft==true) | .id")
          
          if [ -z "$RELEASE_ID" ]; then
            echo "❌ No draft release found for tag ${{ github.ref_name }}"
            echo "Creating a new release instead..."
            # Fallback: create a new release if no draft found
            gh release create ${{ github.ref_name }} bin/* \
              --title "${{ github.ref_name }}" \
              --notes "Automated release for ${{ github.ref_name }}"
          else
            echo "✅ Found draft release ID: $RELEASE_ID"
            # Upload binaries to the draft release
            gh release upload ${{ github.ref_name }} bin/* --clobber
            
            # Publish the draft release
            gh release edit ${{ github.ref_name }} --draft=false
            echo "✅ Published release ${{ github.ref_name }} with binaries"
          fi

      - name: Upload artifacts (for workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: signoz-mcp-binaries
          path: bin/
          retention-days: 7